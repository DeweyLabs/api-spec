openapi: 3.1.0
info:
  description: |
    Customer only API

    ## Authentication
    Talk to us to get an API key.

    ## Versioning
    This API is versioned through the URL path (/v0/). It is beta quality and undergoing rapid development.

    ## Rate Limiting
    Coming soon.
  title: Dewey API
  version: 0.0.1
  license:
    name: All Rights Reserved
    url: https://www.askdewey.co
servers:
  - url: "https://app.askdewey.co/api/v0"
    description: Base API URL
paths:
  /api/v0/conversations:
    post:
      operationId: createConversation
      summary: Initiate a conversation with a query and get an answer
      description: Create a new conversation with an initial query. The response messages object will only include the most recently created Dewey response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConversationRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationObject"
              example:
                id: "123e4567-e89b-12d3-a456-426614174000"
                messages:
                  - created_at: 1702494381
                    rank: 1
                    content:
                      value: "Based on recent research, regular exercise can help reduce cold symptoms and duration."
                      annotations:
                        - type: citation
                          rank: 1
                          text: "Effects of Exercise on Common Cold Symptoms"
                          href: "https://example.com/research/cold-exercise"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
              example:
                error:
                  type: "validation_error"
                  message: "Invalid request parameters"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalError"

  /api/v0/conversations/{conversationID}:
    post:
      operationId: addMessage
      summary: Query an existing conversation
      description: Add a query to an existing conversation. The response messages object will only include the most recently created Dewey response.
      parameters:
        - in: path
          name: conversationID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConversationRequest"
      responses:
        "200":
          description: Conversation updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationObject"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                notOwnConversation:
                  summary: Attempted to access another organization's conversation
                  value:
                    error:
                      type: "authorization_error"
                      message: "You do not have permission to access this conversation"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalError"

  /api/v0/questions/trending:
    get:
      operationId: getTrendingQuestions
      summary: Retrieve trending questions
      description: Returns an ordered list of most frequently asked or relevant questions. Currently returns up to 6 questions.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    items:
                      type: string
                    example:
                      - "What is the best way to get rid of a cold?"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitExceeded"
        "500":
          $ref: "#/components/responses/InternalError"

security:
  - ClientKey: []
components:
  securitySchemes:
    ClientKey:
      type: apiKey
      description: |
        Client-side publishable key for authentication.
        Requires valid Origin/Referer headers matching allowed domains configured for the key.
        Keys are environment-specific, starting with either pk_live_ or pk_test_.
      name: X-Dewey-Key
      in: header
      x-examples:
        live: "pk_live_123abc"
        test: "pk_test_123abc"
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
              enum:
                - authentication_error
                - authorization_error
                - validation_error
                - rate_limit_error
                - internal_error
            message:
              type: string
              maxLength: 1000

    ValidationErrorResponse:
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"

    CreateConversationRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          properties:
            query:
              type: string
              minLength: 1
              maxLength: 2000
      example:
        query: "What is the best way to get rid of a cold?"

    ConversationObject:
      type: object
      properties:
        id:
          type: string
          format: uuid
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessageObject"
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        messages:
          - created_at: 1702494381
            rank: 1
            content:
              value: "Honeyed tea of course"
              annotations:
                - type: citation
                  rank: 1
                  text: "The brilliant cure-all, Honeyed tea"
                  href: "https://www.expertdomain.com/health/cold-flu/honey-lemon-tea"

    MessageObject:
      type: object
      properties:
        created_at:
          type: integer
        conversation_id:
          type: string
          format: uuid
        rank:
          type: integer
        content:
          type: object
          required:
            - value
            - annotations
          properties:
            value:
              description: The text value of the message
              type: string
              maxLength: 10000
            annotations:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/MessageContentTextAnnotationsCitationObject"
                  - $ref: "#/components/schemas/MessageContentTextAnnotationSuggestionObject"

    MessageContentTextAnnotationsCitationObject:
      type: object
      description: A citation or reference for the message
      required:
        - type
        - text
        - href
      properties:
        type:
          type: string
          enum: ["citation"]
        rank:
          type: integer
          minimum: 1
        text:
          type: string
          maxLength: 500 # arbitrary to have a limit
        href:
          type: string
          maxLength: 2000
          pattern: "^https?://.*"

    MessageContentTextAnnotationSuggestionObject:
      type: object
      description: A suggestion source for the message
      required:
        - type
        - text
        - href
      properties:
        type:
          type: string
          enum: ["suggestion"]
        rank:
          type: integer
          minimum: 1
        text:
          type: string
          maxLength: 500 # arbitrary to have a limit
        href:
          type: string
          maxLength: 2000
          pattern: "^https?://.*"

  responses:
    ValidationError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ValidationErrorResponse"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    RateLimitExceeded:
      description: Too Many Requests
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per window
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests in window
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Window reset timestamp
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
